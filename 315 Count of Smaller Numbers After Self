class Solution {
public:
vector<int> result;
    vector<int> countSmaller(vector<int>& nums) {
        int size=nums.size();
       vector<int> result(size,0);
      // vector<int> sorted;
        vector<pair<int,int>> pairs(size);
        for(int i=0;i<size;i++)
        pairs[i]=make_pair(nums[i],i);
        mergesort(pairs,0,size,result);
        //cout<<pairs.size();
        return result;
    }
    void mergesort(vector<pair<int,int>> & pairs,int left,int right,vector<int>& result){
        
        if(left>=right-1)
        return ;
        int mid=left+(right-left)/2;
        mergesort(pairs,left,mid,result);
        mergesort(pairs,mid,right,result);
        vector<pair<int,int>> temp;
        int i=left,j=mid;
        int count=0;
        while(i<mid||j<right){
            if(j==right||(i<mid&&pairs[i].first<=pairs[j].first)){
            temp.push_back(pairs[i]);
           result[pairs[i].second]+=count;
            i++;
            }
            else {
                temp.push_back(pairs[j]);
                j++;
                count++;
            }
        }
        
        move(temp.begin(),temp.end(),pairs.begin()+left);
        
    }
};
